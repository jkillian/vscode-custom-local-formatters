{
  "name": "custom-local-formatters",
  "displayName": "Custom Local Formatters",
  "description": "Allows users to register custom local formatters for any language.",
  "publisher": "jkillian",
  "version": "0.0.6",
  "repository": {
    "url": "https://github.com/JKillian/vscode-custom-local-formatters"
  },
  "license": "MIT",
  "engines": {
    "vscode": "^1.45.0"
  },
  "categories": [
    "Formatters"
  ],
  "keywords": [
    "formatter",
    "format",
    "script",
    "custom",
    "local"
  ],
  "icon": "images/logo.png",
  "galleryBanner": {
    "color": "#83E4C6",
    "theme": "light"
  },
  "main": "./out/extension.js",
  "activationEvents": [
    "*"
  ],
  "contributes": {
    "configuration": {
      "title": "Custom Local Formatters",
      "properties": {
        "customLocalFormatters.formatters": {
          "type": "array",
          "description": "Array of custom formatters",
          "default": [],
          "items": {
            "type": "object",
            "description": "A single custom formatter.",
            "properties": {
              "command": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "properties": {
                      "darwin": {"type": "string", "description": "macOS"},
                      "linux": {"type": "string", "description": "Linux"},
                      "win32": {"type": "string", "description": "Windows"},
                      "aix": {"type": "string"},
                      "freebsd": {"type": "string"},
                      "openbsd": {"type": "string"},
                      "sunos": {"type": "string"},
                      "android": {"type": "string"},
                      "*": {"type": "string"}
                    }
                  }
                ],
                "examples": [
                  "",
                  {
                    "win32": "",
                    "*": ""
                  }
                ],
                "description": "The shell command to run. Should accept the code's text through STDIN and output the formatted result through STDOUT. If an object is passed, the command matching the current platform or otherwise \"*\" is picked."
              },
              "disabled": {
                "type": "boolean",
                "default": false
              },
              "languages": {
                "type": "array",
                "description": "Array of VSCode language identifiers. See https://code.visualstudio.com/docs/languages/identifiers",
                "items": {
                  "type": "string",
                  "minLength": 1,
                  "examples": [
                    "", "abap", "bat", "bibtex", "clojure", "coffeescript", "c",
                    "cpp", "csharp", "d", "dockercompose", "css", "cuda-cpp",
                    "diff", "dockerfile", "fsharp", "git-commit", "git-rebase",
                    "go", "groovy", "handlebars", "haml", "html", "ini", "java",
                    "javascript", "javascriptreact", "json", "jsonc", "latex",
                    "less", "lua", "makefile", "markdown", "objective-c",
                    "objective-cpp", "perl", "php", "plaintext", "powershell",
                    "jade", "pug", "python", "r", "razor", "ruby", "rust",
                    "scss", "sass", "shaderlab", "shellscript", "slim", "sql",
                    "stylus", "swift", "typescript", "typescriptreact", "tex",
                    "vb", "vue", "vue-html", "xml", "xsl", "yaml"
                  ]
                },
                "minItems": 1
              }
            },
            "required": [
              "command",
              "languages"
            ]
          }
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run compile && yarn run lint",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.1.4",
    "@types/mocha": "^7.0.2",
    "@types/node": "^13.11.0",
    "@types/vscode": "^1.45.0",
    "@typescript-eslint/eslint-plugin": "^4.32.0",
    "@typescript-eslint/parser": "^4.32.0",
    "eslint": "^7.32.0",
    "glob": "^7.2.0",
    "mocha": "^9.1.2",
    "typescript": "^4.4.3",
    "vsce": "^1.100.0",
    "vscode-test": "^1.6.1"
  }
}
